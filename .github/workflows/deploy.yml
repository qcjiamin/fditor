name: 自动部署 fditor-ui
on:
  workflow_dispatch:
    # 可选：添加参数配置，比如手动指定版本号; 由于guthub无法使用ssl链接到wsl的linux环境，先设置为手动触发部署
    inputs:
      version:
        description: '指定部署的版本号（如1.2.3）'
        required: true
        default: '1.0.0'
  # create:
  #   tags: # 只在创建标签时触发
  #     - 'v*' # 匹配v开头的标签（如v1.0.0）
jobs:
  deploy:
    runs-on: ubuntu-latest # 使用GitHub提供的Ubuntu环境
    steps:
      - name: 部署到服务器
        uses: appleboy/ssh-action@master # 使用SSH工具连接服务器
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          # 服务器上执行的部署命令
          script: |
            # 从 Git 标签（v1.2.3）中去除 v，得到 1.2.3
            DOCKER_TAG=$(echo "${{ github.ref_name }}" | sed 's/^v//')
            echo "Docker 标签: $DOCKER_TAG"

            # 登录 Docker Hub（关键步骤）
            echo "${{ secrets.DOCKER_HUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_HUB_USERNAME }}" --password-stdin

            # 拉取最新镜像（若使用Docker Hub）github.ref_name,标签名
            docker pull ${{ secrets.DOCKER_IMAGE_NAME }}:${{ env.DOCKER_TAG }}

            # 停止并删除旧容器
            if [ $(docker ps -q -f name=${{ secrets.DOCKER_IMAGE_NAME }}) ]; then
              docker stop ${{ secrets.DOCKER_IMAGE_NAME }}
              docker rm ${{ secrets.DOCKER_IMAGE_NAME }}
            fi

            # 启动新容器
            docker run -d \
              --name ${{ secrets.DOCKER_IMAGE_NAME }} \
              -p 80:80 \
              --restart always \
              ${{ secrets.DOCKER_IMAGE_NAME }}:$DOCKER_TAG

            # 清理无用镜像
            docker image prune -f

            # 登出Docker Hub
            docker logout
